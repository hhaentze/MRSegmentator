---
imports:
  - "$import glob"
  - "$import pandas as pd"
  - "$import scripts.utils as utils"
  - "$import scripts.transforms as transforms"
  - "$import configs.config as config"
  - "$import scripts.labelmappings as lm"
input_channels: 1
output_channels: 41
ckpt_path: "models/model.pt"
bundle_root: "./"
output_dir: "$@bundle_root + 'eval'"
test_df: "$pd.read_csv(config.mr_seg_path+'csv/test.csv')"
datalist: "$utils.get_datalist(@test_df, config.mr_path, config.mr_label_path)"
device: "$torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')"
network: "$@network_def.to(@device)"
image_key: image
label_key: label
network_def:
  _target_: monai.networks.nets.UNet
  spatial_dims: 3
  in_channels: "@input_channels"
  out_channels: "@output_channels"
  channels: [64, 128, 256, 512]
  strides: [2, 2, 2]
  num_res_units: 3
preprocessing:
  _target_: Compose
  transforms:
    - _target_: LoadImaged
      keys:
        - "@image_key"
        - "@label_key"
    - _target_: EnsureChannelFirstd
      keys:
        - "@image_key"
        - "@label_key"
    - _target_: Spacingd
      keys:
        - "@image_key"
        - "@label_key"
      pixdim:
        - 3
        - 3
        - 3
      mode:
        - bilinear
        - nearest
      align_corners:
        - true
        - true
    - _target_: "$transforms.MatchSized"
      keys: "@label_key"
      reference_key: "@image_key"
      mode: nearest
      allow_missing_keys: True
    - _target_: HistogramNormalized
      keys: "@image_key"
      num_bins: 256
      min: 0
      max: 1
    - _target_: Orientationd
      keys: 
        - "@image_key"
        - "@label_key"
      axcodes: RAS
dataset:
  _target_: Dataset
  data: "@datalist"
  transform: "@preprocessing"
dataloader:
  _target_: DataLoader
  dataset: "@dataset"
  batch_size: 1
  shuffle: false
  num_workers: 2
inferer:
  _target_: SlidingWindowInferer
  roi_size:
    - 64
    - 64
    - 64
  sw_batch_size: 4
  overlap: 0.625
  progress: true
postprocessing:
  _target_: Compose
  transforms:
    - _target_: Lambdad
      keys:
        - "@label_key"
      func: "$lm.transform_mr"
    - _target_: AsDiscreted
      keys:
        - pred
        - "@label_key"
      argmax:
        - true
        - false
      to_onehot: "@output_channels" 
handlers:
  - _target_: CheckpointLoader
    load_path: "$@bundle_root + @ckpt_path"
    load_dict:
      network: "@network"
  - _target_: StatsHandler
    iteration_log: false
  - _target_: MetricsSaver
    save_dir: "@output_dir"
    metric_details: "*"
    delimiter: ","
    batch_transform: "$utils.get_meta_dict(@image_key)"
metrics:
  MeanDice:
    _target_: MeanDice
    include_background: false
    output_transform: "$monai.handlers.from_engine(['pred', 'label'])"
evaluator:
  _target_: SupervisedEvaluator
  device: "@device"
  val_data_loader: "@dataloader"
  network: "@network"
  inferer: "@inferer"
  postprocessing: "@postprocessing"
  key_val_metric: "@metrics"
  val_handlers: "@handlers"
  amp: true
evaluating:
  - "$setattr(torch.backends.cudnn, 'benchmark', True)"
  - "$@evaluator.run()"
