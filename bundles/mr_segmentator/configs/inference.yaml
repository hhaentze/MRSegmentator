---
imports:
  - "$import pandas as pd"
  - "$import scripts.utils as utils"
  - "$import configs.config as config"
  - "$import scripts.labelmappings as lm"
input_channels: 1
output_channels: 41
ckpt_path: "models/model.pt"
bundle_root: "./"
output_dir: "$config.ukbb + 'preds_mr2/'"
#output_dir: "$config.ukbb_cache + 'preds/'"
#dataset_dir: "$config.ukbb + 'nifti/'"
#dataset_dir: "$config.mr_path"
#test_df: "$pd.read_csv(config.mr_seg_path+'csv/test.csv')"
#datalist: "$[{'image': @dataset_dir + img} for img in @test_df['image']]"
datalist: "$utils.parse_data_for_inference(@dataset_dir)"
#datalist: "$[{'image': @dataset_dir + img} for img in pd.read_csv('/home/haha16/ukbb/reduced_manifest3.csv')['image']]"
device: "$torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')"
network: "$@network_def.to(@device)"
image_key: image
network_def:
  _target_: monai.networks.nets.UNet
  spatial_dims: 3
  in_channels: "@input_channels"
  out_channels: "@output_channels"
  channels: [64, 128, 256, 512]
  strides: [2, 2, 2]
  num_res_units: 3
preprocessing:
  _target_: Compose
  transforms:
    - _target_: LoadImaged
      keys: "@image_key"
    - _target_: EnsureChannelFirstd
      keys: "@image_key"
    - _target_: Spacingd
      keys: "@image_key"
      pixdim:
        - 3
        - 3
        - 3
      mode: bilinear
      align_corners: true
    - _target_: HistogramNormalized
      keys: "@image_key"
      num_bins: 256
      min: 0
      max: 1
    - _target_: Orientationd
      keys: "@image_key"
      axcodes: RAS
dataset:
  _target_: Dataset
  data: "@datalist"
  transform: "@preprocessing"
dataloader:
  _target_: DataLoader
  dataset: "@dataset"
  batch_size: 1
  shuffle: false
  num_workers: 4
inferer:
  _target_: SlidingWindowInferer
  roi_size:
    - 64
    - 64
    - 64
  sw_batch_size: 8
  overlap: 0.25
  progress: True
postprocessing:
  _target_: Compose
  transforms:
    - _target_: EnsureTyped
      keys: pred
    - _target_: AsDiscreted
      keys: pred
      argmax: true
    - _target_: FillHolesd
      keys: pred
    # - _target_: KeepLargestConnectedComponentd
    #   keys: pred
    #   applied_labels: "$[1,2,3,5,6,7]"
    - _target_: Orientationd
      keys: pred
      axcodes: LPS
    - _target_: Lambdad
      keys: pred
      func: "$utils.adapt_filename_ukbb"
    - _target_: SaveImaged
      keys: pred
      output_dir: "@output_dir"
      resample: True
      separate_folder: false
      output_postfix: ""
handlers:
  - _target_: CheckpointLoader
    load_path: "$@bundle_root + @ckpt_path"
    map_location: "@device"
    load_dict:
      network: "@network"
  - _target_: StatsHandler
    iteration_log: false
evaluator:
  _target_: SupervisedEvaluator
  device: "@device"
  val_data_loader: "@dataloader"
  network: "@network"
  inferer: "@inferer"
  postprocessing: "@postprocessing"
  val_handlers: "@handlers"
  amp: true
inference:
  - "$setattr(torch.backends.cudnn, 'benchmark', True)"
  - "$@evaluator.run()"
